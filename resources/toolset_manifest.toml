name = "XuanWu Rust Distribution (Community)"
version = "1.80.1"

[proxy]
no-proxy = "localhost,127.0.0.1"

[rust]
version = "stable"
group = "Rust"
components = ["clippy", "rustfmt", "rust-src", "rust-docs"]
optional-components = ["llvm-tools-preview", "rust-analysis"]
# offline-dist-server = "packages/" # Must contain a folder named "dist"

# [rust.rustup]
# x86_64-pc-windows-msvc = "packages/x86_64-pc-windows-msvc/rustup-init.exe"
# x86_64-pc-windows-gnu = "packages/x86_64-pc-windows-msvc/rustup-init.exe"
# x86_64-unknown-linux-gnu = "packages/x86_64-unknown-linux-gnu/rustup-init"
# aarch64-apple-darwin = "packages/aarch64-apple-darwin/rustup-init"

[rust.profile]
name = "minimal"
verbose-name = "Basic"
description = "Basic set of tools to use Rust properly"

[tools.descriptions]
clippy = "A collection of lints to catch common mistakes and improve your Rust code."
rustfmt = "A tool for formatting Rust code according to style guidelines."
cargo-llvm-cov = "Cargo subcommand to easily use LLVM source-based code coverage."
vscode = "A free code editor with support for development operations like debugging, task running, and version control."
vscode-rust-analyzer = "An implementation of Language Server Protocol for the Rust programming language. It provides features like completion and goto definition for VS-Code"
flamegraph = "A Rust-powered flamegraph generator with additional support for Cargo projects."
cargo-expand = "Prints out the result of macro expansion and #[derive] expansion applied to the current crate."
buildtools = "(windows-msvc only) Requirement for Windows"
mingw64 = "(windows-gnu only) Requirement for Windows"

[tools.group]
Prerequisites = [ "buildtools", "mingw64" ]
"IDE Related" = [ "vscode", "vscode-rust-analyzer" ]
Misc = [ "flamegraph", "cargo-expand" ]

[tools.target.x86_64-pc-windows-msvc]
buildtools = { required = true, path = "packages/x86_64-pc-windows-msvc/BuildTools-With-SDK.zip", version = "1" }
cargo-llvm-cov = { optional = true, url = "https://github.com/taiki-e/cargo-llvm-cov/releases/download/v0.6.11/cargo-llvm-cov-x86_64-pc-windows-msvc.zip", version = "0.6.11" }
vscode = { path = "packages/x86_64-pc-windows-gnu/VSCode-win32-x64-1.91.1.zip", version = "1.91.1" }
vscode-rust-analyzer = { path = "packages/x86_64-pc-windows-gnu/rust-lang.rust-analyzer-0.4.2054@win32-x64.vsix", version = "0.4.2054" }
cargo-expand = { optional = true, ver = "1.0.88" }

[tools.target.x86_64-pc-windows-gnu]
mingw64 = { required = true, path = "packages/x86_64-pc-windows-gnu/x86_64-13.2.0-release-posix-seh-msvcrt-rt_v11-rev1.7z", version = "13.2.0" }
vscode = { path = "packages/x86_64-pc-windows-gnu/VSCode-win32-x64-1.91.1.zip", version = "1.91.1" }
vscode-rust-analyzer = { path = "packages/x86_64-pc-windows-gnu/rust-lang.rust-analyzer-0.4.2054@win32-x64.vsix", version = "0.4.2054" }
cargo-expand = { optional = true, ver = "1.0.88" }

[tools.target.x86_64-unknown-linux-gnu]
vscode = { path = "packages/x86_64-unknown-linux-gnu/code-stable-x64-1723659430.tar.gz", version = "1.91.1" }
cargo-llvm-cov = { url = "https://github.com/taiki-e/cargo-llvm-cov/releases/download/v0.6.11/cargo-llvm-cov-x86_64-unknown-linux-gnu.tar.gz", version = "0.6.11" }
flamegraph = { optional = true, git = "https://github.com/flamegraph-rs/flamegraph", tag = "v0.6.5" }
cargo-expand = { optional = true, ver = "1.0.88" }

[tools.target.aarch64-apple-darwin]
cargo-llvm-cov = { optional = true, url = "https://github.com/taiki-e/cargo-llvm-cov/releases/download/v0.6.11/cargo-llvm-cov-aarch64-apple-darwin.tar.gz", version = "0.6.11" }
flamegraph = { optional = true, git = "https://github.com/flamegraph-rs/flamegraph", tag = "v0.6.5" }
cargo-expand = { optional = true, ver = "1.0.88" }
