[rustup]
version = "1.26.0"

[toolchain]
# This should be loaded from "rustup_home/settings.toml"
default = "stable-x86_64-pc-windows-msvc"

[toolchain.stable-x86_64-pc-windows-msvc]
# This should be loaded from "rustup_home/toolchains/TOOLCHAIN/lib/rustlib/multirust-channel-manifest.toml"
# and this piece of info could be fetched from `pkg.rustc.version` if it has one.
# Or by simply running `./rustc -V` under "rustup_home/toolchains/TOOLCHAIN/bin", whichever is more reliable.
version = "1.71.0 (8ede3aae2 2023-07-12)"
# Content of this should be loaded from "rustup_home/toolchains/TOOLCHAIN/lib/rustlib/components"
components = [
    "cargo-x86_64-pc-windows-msvc",
    "clippy-preview-x86_64-pc-windows-msvc",
    "rust-docs-x86_64-pc-windows-msvc",
    "rust-std-x86_64-pc-windows-msvc",
    "rustc-x86_64-pc-windows-msvc",
    "rustfmt-preview-x86_64-pc-windows-msvc",
    "rust-src",
]

[tool]
keep_package = true
# Root for all prebuild-tool packages if `keep_package` was set to `true`
package_dir = "/home/packages"
# Root for all unpacked packages
tools_dir = "/home/tools"

# Content of `tool` should be loaded from "cargo_home/.crates.toml"
[tool.tokei]
version = "12.1.2"

[tool.cargo-audit]
version = "0.17.6"

[tool.hello-world]
version = "0.1.0"
# There will be two kind of installation for tools,
# one is via `cargo install`, which is typically install from source code;
# And the other is via packages, which will hard link the binaries into `cargo_home/bin`,
# when `installed_from_source` option is false meaning it was installed using later method.
installed_from_source = false
